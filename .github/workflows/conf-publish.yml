# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test and Publish the ISMIR-2022-MiniConf to GHPages

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.7
      uses: actions/setup-python@v3
      with:
        python-version: "3.7"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Freeze with Flask-Frozen
      run: |
        export FLASK_DEBUG=True; export FLASK_DEVELOPMENT=True; python3 main.py sitedata/
        python main.py sitedata/ --build
    - name: Push to dev pages
      run: |
        git add -f build
        git commit -am "Deploy on gh-pages-dev"
        git subtree split --prefix build -b gh-pages-dev
        git push --force origin gh-pages-dev
        git checkout @{-1}
        @echo "Deployed successfully to gh-pages-dev ðŸš€"
